{"ast":null,"code":"/*\nCopyright (c) Daybrush\nname: keycon\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/keycon.git\nversion: 1.1.2\n*/\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 1.0.0\n*/\n\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Returns the index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findIndex } from \"@daybrush/utils\";\n\nfindIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\n\n\nfunction findIndex(arr, callback, defaultIndex) {\n  if (defaultIndex === void 0) {\n    defaultIndex = -1;\n  }\n\n  var length = arr.length;\n\n  for (var i = 0; i < length; ++i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n\n  return defaultIndex;\n}\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener. The available options are:\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\n\n\nfunction addEvent(el, type, listener, options) {\n  el.addEventListener(type, listener, options);\n}\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\n\n\nfunction removeEvent(el, type, listener) {\n  el.removeEventListener(type, listener);\n}\n/*\nCopyright (c) 2019 Daybrush\nname: @scena/event-emitter\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/gesture.git\nversion: 1.0.2\n*/\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}\n/**\n * Implement EventEmitter on object or component.\n */\n\n\nvar EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter() {\n    this._events = {};\n  }\n  /**\n   * Add a listener to the registered event.\n   * @param - Name of the event to be added\n   * @param - listener function of the event to be added\n   * @example\n   * import EventEmitter from \"@scena/event-emitter\";\n   * cosnt emitter = new EventEmitter();\n   *\n   * // Add listener in \"a\" event\n   * emitter.on(\"a\", () => {\n   * });\n   * // Add listeners\n   * emitter.on({\n   *  a: () => {},\n   *  b: () => {},\n   * });\n   */\n\n\n  var __proto = EventEmitter.prototype;\n\n  __proto.on = function (eventName, listener) {\n    if (isObject(eventName)) {\n      for (var name in eventName) {\n        this.on(name, eventName[name]);\n      }\n    } else {\n      this._addEvent(eventName, listener, {});\n    }\n\n    return this;\n  };\n  /**\n   * Remove listeners registered in the event target.\n   * @param - Name of the event to be removed\n   * @param - listener function of the event to be removed\n   * @example\n   * import EventEmitter from \"@scena/event-emitter\";\n   * cosnt emitter = new EventEmitter();\n   *\n   * // Remove all listeners.\n   * emitter.off();\n   *\n   * // Remove all listeners in \"A\" event.\n   * emitter.off(\"a\");\n   *\n   *\n   * // Remove \"listener\" listener in \"a\" event.\n   * emitter.off(\"a\", listener);\n   */\n\n\n  __proto.off = function (eventName, listener) {\n    if (!eventName) {\n      this._events = {};\n    } else if (isObject(eventName)) {\n      for (var name in eventName) {\n        this.off(name);\n      }\n    } else if (!listener) {\n      this._events[eventName] = [];\n    } else {\n      var events = this._events[eventName];\n\n      if (events) {\n        var index = findIndex(events, function (e) {\n          return e.listener === listener;\n        });\n\n        if (index > -1) {\n          events.splice(index, 1);\n        }\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Add a disposable listener and Use promise to the registered event.\n   * @param - Name of the event to be added\n   * @param - disposable listener function of the event to be added\n   * @example\n   * import EventEmitter from \"@scena/event-emitter\";\n   * cosnt emitter = new EventEmitter();\n   *\n   * // Add a disposable listener in \"a\" event\n   * emitter.once(\"a\", () => {\n   * });\n   *\n   * // Use Promise\n   * emitter.once(\"a\").then(e => {\n   * });\n   */\n\n\n  __proto.once = function (eventName, listener) {\n    var _this = this;\n\n    if (listener) {\n      this._addEvent(eventName, listener, {\n        once: true\n      });\n    }\n\n    return new Promise(function (resolve) {\n      _this._addEvent(eventName, resolve, {\n        once: true\n      });\n    });\n  };\n  /**\n   * Fires an event to call listeners.\n   * @param - Event name\n   * @param - Event parameter\n   * @return If false, stop the event.\n   * @example\n   *\n   * import EventEmitter from \"@scena/event-emitter\";\n   *\n   *\n   * const emitter = new EventEmitter();\n   *\n   * emitter.on(\"a\", e => {\n   * });\n   *\n   *\n   * emitter.emit(\"a\", {\n   *   a: 1,\n   * });\n   */\n\n\n  __proto.emit = function (eventName, param) {\n    var _this = this;\n\n    if (param === void 0) {\n      param = {};\n    }\n\n    var events = this._events[eventName];\n\n    if (!eventName || !events) {\n      return true;\n    }\n\n    var isStop = false;\n    param.eventType = eventName;\n\n    param.stop = function () {\n      isStop = true;\n    };\n\n    param.currentTarget = this;\n\n    __spreadArrays(events).forEach(function (info) {\n      info.listener(param);\n\n      if (info.once) {\n        _this.off(eventName, info.listener);\n      }\n    });\n\n    return !isStop;\n  };\n  /**\n   * Fires an event to call listeners.\n   * @param - Event name\n   * @param - Event parameter\n   * @return If false, stop the event.\n   * @example\n   *\n   * import EventEmitter from \"@scena/event-emitter\";\n   *\n   *\n   * const emitter = new EventEmitter();\n   *\n   * emitter.on(\"a\", e => {\n   * });\n   *\n   *\n   * emitter.emit(\"a\", {\n   *   a: 1,\n   * });\n   */\n\n  /**\n  * Fires an event to call listeners.\n  * @param - Event name\n  * @param - Event parameter\n  * @return If false, stop the event.\n  * @example\n  *\n  * import EventEmitter from \"@scena/event-emitter\";\n  *\n  *\n  * const emitter = new EventEmitter();\n  *\n  * emitter.on(\"a\", e => {\n  * });\n  *\n  * // emit\n  * emitter.trigger(\"a\", {\n  *   a: 1,\n  * });\n  */\n\n\n  __proto.trigger = function (eventName, param) {\n    if (param === void 0) {\n      param = {};\n    }\n\n    return this.emit(eventName, param);\n  };\n\n  __proto._addEvent = function (eventName, listener, options) {\n    var events = this._events;\n    events[eventName] = events[eventName] || [];\n    var listeners = events[eventName];\n    listeners.push(_assign({\n      listener: listener\n    }, options));\n  };\n\n  return EventEmitter;\n}();\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar keycode = createCommonjsModule(function (module, exports) {\n  // Source: http://jsfiddle.net/vWx8V/\n  // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n  /**\n   * Conenience method returns corresponding value for given keyName or keyCode.\n   *\n   * @param {Mixed} keyCode {Number} or keyName {String}\n   * @return {Mixed}\n   * @api public\n   */\n  function keyCode(searchInput) {\n    // Keyboard Events\n    if (searchInput && 'object' === typeof searchInput) {\n      var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n      if (hasKeyCode) searchInput = hasKeyCode;\n    } // Numbers\n\n\n    if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n    var search = String(searchInput); // check codes\n\n    var foundNamedKey = codes[search.toLowerCase()];\n    if (foundNamedKey) return foundNamedKey; // check aliases\n\n    var foundNamedKey = aliases[search.toLowerCase()];\n    if (foundNamedKey) return foundNamedKey; // weird character?\n\n    if (search.length === 1) return search.charCodeAt(0);\n    return undefined;\n  }\n  /**\n   * Compares a keyboard event with a given keyCode or keyName.\n   *\n   * @param {Event} event Keyboard event that should be tested\n   * @param {Mixed} keyCode {Number} or keyName {String}\n   * @return {Boolean}\n   * @api public\n   */\n\n\n  keyCode.isEventKey = function isEventKey(event, nameOrCode) {\n    if (event && 'object' === typeof event) {\n      var keyCode = event.which || event.keyCode || event.charCode;\n\n      if (keyCode === null || keyCode === undefined) {\n        return false;\n      }\n\n      if (typeof nameOrCode === 'string') {\n        // check codes\n        var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n        if (foundNamedKey) {\n          return foundNamedKey === keyCode;\n        } // check aliases\n\n\n        var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n        if (foundNamedKey) {\n          return foundNamedKey === keyCode;\n        }\n      } else if (typeof nameOrCode === 'number') {\n        return nameOrCode === keyCode;\n      }\n\n      return false;\n    }\n  };\n\n  exports = module.exports = keyCode;\n  /**\n   * Get by name\n   *\n   *   exports.code['enter'] // => 13\n   */\n\n  var codes = exports.code = exports.codes = {\n    'backspace': 8,\n    'tab': 9,\n    'enter': 13,\n    'shift': 16,\n    'ctrl': 17,\n    'alt': 18,\n    'pause/break': 19,\n    'caps lock': 20,\n    'esc': 27,\n    'space': 32,\n    'page up': 33,\n    'page down': 34,\n    'end': 35,\n    'home': 36,\n    'left': 37,\n    'up': 38,\n    'right': 39,\n    'down': 40,\n    'insert': 45,\n    'delete': 46,\n    'command': 91,\n    'left command': 91,\n    'right command': 93,\n    'numpad *': 106,\n    'numpad +': 107,\n    'numpad -': 109,\n    'numpad .': 110,\n    'numpad /': 111,\n    'num lock': 144,\n    'scroll lock': 145,\n    'my computer': 182,\n    'my calculator': 183,\n    ';': 186,\n    '=': 187,\n    ',': 188,\n    '-': 189,\n    '.': 190,\n    '/': 191,\n    '`': 192,\n    '[': 219,\n    '\\\\': 220,\n    ']': 221,\n    \"'\": 222\n  }; // Helper aliases\n\n  var aliases = exports.aliases = {\n    'windows': 91,\n    '⇧': 16,\n    '⌥': 18,\n    '⌃': 17,\n    '⌘': 91,\n    'ctl': 17,\n    'control': 17,\n    'option': 18,\n    'pause': 19,\n    'break': 19,\n    'caps': 20,\n    'return': 13,\n    'escape': 27,\n    'spc': 32,\n    'spacebar': 32,\n    'pgup': 33,\n    'pgdn': 34,\n    'ins': 45,\n    'del': 46,\n    'cmd': 91\n  };\n  /*!\n   * Programatically add the following\n   */\n  // lower case chars\n\n  for (i = 97; i < 123; i++) {\n    codes[String.fromCharCode(i)] = i - 32;\n  } // numbers\n\n\n  for (var i = 48; i < 58; i++) {\n    codes[i - 48] = i;\n  } // function keys\n\n\n  for (i = 1; i < 13; i++) {\n    codes['f' + i] = i + 111;\n  } // numpad keys\n\n\n  for (i = 0; i < 10; i++) {\n    codes['numpad ' + i] = i + 96;\n  }\n  /**\n   * Get by code\n   *\n   *   exports.name[13] // => 'Enter'\n   */\n\n\n  var names = exports.names = exports.title = {}; // title for backward compat\n  // Create reverse mapping\n\n  for (i in codes) {\n    names[codes[i]] = i;\n  } // Add aliases\n\n\n  for (var alias in aliases) {\n    codes[alias] = aliases[alias];\n  }\n});\nvar keycode_1 = keycode.code;\nvar keycode_2 = keycode.codes;\nvar keycode_3 = keycode.aliases;\nvar keycode_4 = keycode.names;\nvar keycode_5 = keycode.title;\nvar codeData = {\n  \"+\": \"plus\",\n  \"left command\": \"meta\",\n  \"right command\": \"meta\"\n};\nvar keysSort = {\n  shift: 1,\n  ctrl: 2,\n  alt: 3,\n  meta: 4\n};\n/**\n * @memberof KeyController\n */\n\nfunction getKey(keyCode) {\n  var key = keycode_4[keyCode] || \"\";\n\n  for (var name in codeData) {\n    key = key.replace(name, codeData[name]);\n  }\n\n  return key.replace(/\\s/g, \"\");\n}\n/**\n * @memberof KeyController\n */\n\n\nfunction getCombi(e, key) {\n  if (key === void 0) {\n    key = getKey(e.keyCode);\n  }\n\n  var keys = getModifierCombi(e);\n  keys.indexOf(key) === -1 && keys.push(key);\n  return keys.filter(Boolean);\n}\n/**\n * @memberof KeyController\n */\n\n\nfunction getModifierCombi(e) {\n  var keys = [e.shiftKey && \"shift\", e.ctrlKey && \"ctrl\", e.altKey && \"alt\", e.metaKey && \"meta\"];\n  return keys.filter(Boolean);\n}\n\nfunction getArrangeCombi(keys) {\n  var arrangeKeys = keys.slice();\n  arrangeKeys.sort(function (prev, next) {\n    var prevScore = keysSort[prev] || 5;\n    var nextScore = keysSort[next] || 5;\n    return prevScore - nextScore;\n  });\n  return arrangeKeys;\n}\n\nvar globalKeyController;\n/**\n */\n\nvar KeyController = /*#__PURE__*/function (_super) {\n  __extends(KeyController, _super);\n  /**\n   *\n   */\n\n\n  function KeyController(container) {\n    if (container === void 0) {\n      container = window;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.container = container;\n    /**\n     */\n\n    _this.ctrlKey = false;\n    /**\n     */\n\n    _this.altKey = false;\n    /**\n     *\n     */\n\n    _this.shiftKey = false;\n    /**\n     *\n     */\n\n    _this.metaKey = false;\n\n    _this.clear = function () {\n      _this.ctrlKey = false;\n      _this.altKey = false;\n      _this.shiftKey = false;\n      _this.metaKey = false;\n      return _this;\n    };\n\n    _this.keydownEvent = function (e) {\n      _this.triggerEvent(\"keydown\", e);\n    };\n\n    _this.keyupEvent = function (e) {\n      _this.triggerEvent(\"keyup\", e);\n    };\n\n    _this.blur = function () {\n      _this.clear();\n\n      _this.trigger(\"blur\");\n    };\n\n    addEvent(container, \"blur\", _this.blur);\n    addEvent(container, \"keydown\", _this.keydownEvent);\n    addEvent(container, \"keyup\", _this.keyupEvent);\n    return _this;\n  }\n\n  var __proto = KeyController.prototype;\n  Object.defineProperty(KeyController, \"global\", {\n    /**\n     */\n    get: function get() {\n      return globalKeyController || (globalKeyController = new KeyController());\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  KeyController.setGlobal = function () {\n    return this.global;\n  };\n  /**\n   *\n   */\n\n\n  __proto.destroy = function () {\n    var container = this.container;\n    this.clear();\n    this.off();\n    removeEvent(container, \"blur\", this.blur);\n    removeEvent(container, \"keydown\", this.keydownEvent);\n    removeEvent(container, \"keyup\", this.keyupEvent);\n  };\n  /**\n   *\n   */\n\n\n  __proto.keydown = function (comb, callback) {\n    return this.addEvent(\"keydown\", comb, callback);\n  };\n  /**\n   *\n   */\n\n\n  __proto.offKeydown = function (comb, callback) {\n    return this.removeEvent(\"keydown\", comb, callback);\n  };\n  /**\n   *\n   */\n\n\n  __proto.offKeyup = function (comb, callback) {\n    return this.removeEvent(\"keyup\", comb, callback);\n  };\n  /**\n   *\n   */\n\n\n  __proto.keyup = function (comb, callback) {\n    return this.addEvent(\"keyup\", comb, callback);\n  };\n\n  __proto.addEvent = function (type, comb, callback) {\n    if (isArray(comb)) {\n      this.on(type + \".\" + getArrangeCombi(comb).join(\".\"), callback);\n    } else if (isString(comb)) {\n      this.on(type + \".\" + comb, callback);\n    } else {\n      this.on(type, comb);\n    }\n\n    return this;\n  };\n\n  __proto.removeEvent = function (type, comb, callback) {\n    if (isArray(comb)) {\n      this.off(type + \".\" + getArrangeCombi(comb).join(\".\"), callback);\n    } else if (isString(comb)) {\n      this.off(type + \".\" + comb, callback);\n    } else {\n      this.off(type, comb);\n    }\n\n    return this;\n  };\n\n  __proto.triggerEvent = function (type, e) {\n    this.ctrlKey = e.ctrlKey;\n    this.shiftKey = e.shiftKey;\n    this.altKey = e.altKey;\n    this.metaKey = e.metaKey;\n    var key = getKey(e.keyCode);\n    var isToggle = key === \"ctrl\" || key === \"shift\" || key === \"meta\" || key === \"alt\";\n    var param = {\n      key: key,\n      isToggle: isToggle,\n      inputEvent: e,\n      keyCode: e.keyCode,\n      ctrlKey: e.ctrlKey,\n      altKey: e.altKey,\n      shiftKey: e.shiftKey,\n      metaKey: e.metaKey\n    };\n    this.trigger(type, param);\n    this.trigger(type + \".\" + key, param);\n    var combi = getCombi(e, key);\n    combi.length > 1 && this.trigger(type + \".\" + combi.join(\".\"), param);\n  };\n\n  return KeyController;\n}(EventEmitter);\n\nexport default KeyController;\nexport { getCombi, getKey, getModifierCombi };","map":{"version":3,"sources":["../src/KeyController.ts"],"names":["codeData","keysSort","shift","ctrl","alt","meta","getKey","keyCode","key","names","getCombi","e","keys","getModifierCombi","arrangeKeys","prevScore","nextScore","__extends","Object","globalKeyController","KeyController","_this","_super","addEvent","container","removeEvent","isArray","type","getArrangeCombi","isString","isToggle","param","inputEvent","ctrlKey","altKey","shiftKey","metaKey","combi"],"mappingsb,OADa,MAAA;AAEb,kBAFa,MAAA;AAGb,mBAAiB;AAHJ,CAAjB;AAKA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,KAAK,EADQ,CAAA;AAEbC,EAAAA,IAAI,EAFS,CAAA;AAGbC,EAAAA,GAAG,EAHU,CAAA;AAIbC,EAAAA,IAAI,EAAE;AAJO,CAAjB;AAMA;;;;AAGA,SAAgBC,MAAhB,CAAuBC,OAAvB,EAAuBA;AACnB,MAAIC,GAAG,GAAGC,SAAK,CAALA,OAAK,CAALA,IAAV,EAAA;;AAEA,OAAK,IAAL,IAAA,IAAA,QAAA,EAA6B;AACzBD,IAAAA,GAAG,GAAGA,GAAG,CAAHA,OAAAA,CAAAA,IAAAA,EAAkBR,QAAQ,CAAhCQ,IAAgC,CAA1BA,CAANA;AACH;;AACD,SAAOA,GAAG,CAAHA,OAAAA,CAAAA,KAAAA,EAAP,EAAOA,CAAP;AACH;AAED;;;;;AAGA,SAAgBE,QAAhB,CAAyBC,CAAzB,EAA2C,GAA3C,EAA2C;AAAA,MAAA,GAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAcL,MAAM,CAACK,CAAC,CAAtB,OAAoB,CAApB;;;AACvC,MAAMC,IAAI,GAAGC,gBAAgB,CAA7B,CAA6B,CAA7B;AACAD,EAAAA,IAAI,CAAJA,OAAAA,CAAAA,GAAAA,MAAsB,CAAtBA,CAAAA,IAA4BA,IAAI,CAAJA,IAAAA,CAA5BA,GAA4BA,CAA5BA;AAEA,SAAOA,IAAI,CAAJA,MAAAA,CAAP,OAAOA,CAAP;AACH;AAED;;;;;AAGA,SAAgBC,gBAAhB,CAAiCF,CAAjC,EAAiCA;AAC7B,MAAMC,IAAI,GAAG,CAACD,CAAC,CAADA,QAAAA,IAAD,OAAA,EAAwBA,CAAC,CAADA,OAAAA,IAAxB,MAAA,EAA6CA,CAAC,CAADA,MAAAA,IAA7C,KAAA,EAAgEA,CAAC,CAADA,OAAAA,IAA7E,MAAa,CAAb;AAEA,SAAOC,IAAI,CAAJA,MAAAA,CAAP,OAAOA,CAAP;AACH;;AAED,SAAA,eAAA,CAAA,IAAA,EAAA;AACI,MAAME,WAAW,GAAGF,IAAI,CAAxB,KAAoBA,EAApB;AACAE,EAAAA,WAAW,CAAXA,IAAAA,CAAiB,UAAA,IAAA,EAAA,IAAA,EAAA;AACb,QAAMC,SAAS,GAAGd,QAAQ,CAARA,IAAQ,CAARA,IAAlB,CAAA;AACA,QAAMe,SAAS,GAAGf,QAAQ,CAARA,IAAQ,CAARA,IAAlB,CAAA;AAEA,WAAOc,SAAS,GAAhB,SAAA;AAJJD,GAAAA;AAOA,SAAA,WAAA;AACH;;AAeD,IAAA,mBAAA;AAEA;;;AAEA,IAAA,aAAA,G;AAA4BG,EAAAA,SAAAA,CAAAA,aAAAA,EAAAA,MAAAA,CAAAA;AA0BxB;;;;;AAGA,WAAA,aAAA,CAAA,SAAA,EAAA;AAAoB,QAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,SAAA,GAAA,MAAA;;;AAApB,QAAA,KAAA,GACIK,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,KADJ,IAAA;;AAAoB,IAAA,KAAA,CAAA,SAAA,GAAA,SAAA;AAjBpB;;;AAEOD,IAAAA,KAAAA,CAAAA,OAAAA,GAAAA,KAAAA;AACP;;;AAEOA,IAAAA,KAAAA,CAAAA,MAAAA,GAAAA,KAAAA;AACP;;;;AAGOA,IAAAA,KAAAA,CAAAA,QAAAA,GAAAA,KAAAA;AACP;;;;AAGOA,IAAAA,KAAAA,CAAAA,OAAAA,GAAAA,KAAAA;;AAWAA,IAAAA,KAAAA,CAAAA,KAAAA,GAAQ,YAAA;AACXA,MAAAA,KAAI,CAAJA,OAAAA,GAAAA,KAAAA;AACAA,MAAAA,KAAI,CAAJA,MAAAA,GAAAA,KAAAA;AACAA,MAAAA,KAAI,CAAJA,QAAAA,GAAAA,KAAAA;AACAA,MAAAA,KAAI,CAAJA,OAAAA,GAAAA,KAAAA;AACA,aAAA,KAAA;AALGA,KAAAA;;AAuHCA,IAAAA,KAAAA,CAAAA,YAAAA,GAAe,UAAA,CAAA,EAAA;AACnBA,MAAAA,KAAI,CAAJA,YAAAA,CAAAA,SAAAA,EAAAA,CAAAA;AADIA,KAAAA;;AAGAA,IAAAA,KAAAA,CAAAA,UAAAA,GAAa,UAAA,CAAA,EAAA;AACjBA,MAAAA,KAAI,CAAJA,YAAAA,CAAAA,OAAAA,EAAAA,CAAAA;AADIA,KAAAA;;AAGAA,IAAAA,KAAAA,CAAAA,IAAAA,GAAO,YAAA;AACXA,MAAAA,KAAI,CAAJA,KAAAA;;AACAA,MAAAA,KAAI,CAAJA,OAAAA,CAAAA,MAAAA;AAFIA,KAAAA;;AAjIJE,IAAAA,QAAQ,CAAA,SAAA,EAAA,MAAA,EAAoBF,KAAI,CAAhCE,IAAQ,CAARA;AACAA,IAAAA,QAAQ,CAAA,SAAA,EAAA,SAAA,EAAuBF,KAAI,CAAnCE,YAAQ,CAARA;AACAA,IAAAA,QAAQ,CAAA,SAAA,EAAA,OAAA,EAAqBF,KAAI,CAAjCE,UAAQ,CAARA;;AACH;;;AA7BDL,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,aAAAA,EAAAA,QAAAA,EAAAA;AAFA;;SAEAA,eAAAA;AACI,aAAOC,mBAAmB,KAAKA,mBAAmB,GAAG,IAArD,aAAqD,EAA3B,CAA1B;AACH,KAFDD;qBAAAA;;AAAAA,GAAAA;;AAGcE,EAAAA,aAAAA,CAAAA,SAAAA,GAAd,YAAA;AACI,WAAO,KAAP,MAAA;AADUA,GAAAA;AAkCd;;;;;AAGO,EAAA,OAAA,CAAA,OAAA,GAAP,YAAA;AACI,QAAMI,SAAS,GAAG,KAAlB,SAAA;AAEA,SAAA,KAAA;AACA,SAAA,GAAA;AACAC,IAAAA,WAAW,CAAA,SAAA,EAAA,MAAA,EAAoB,KAA/BA,IAAW,CAAXA;AACAA,IAAAA,WAAW,CAAA,SAAA,EAAA,SAAA,EAAuB,KAAlCA,YAAW,CAAXA;AACAA,IAAAA,WAAW,CAAA,SAAA,EAAA,OAAA,EAAqB,KAAhCA,UAAW,CAAXA;AAPG,GAAA;AAWP;;;;;AAGO,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,IAAA,EAAA,QAAA,EAAA;AAII,WAAO,KAAA,QAAA,CAAA,SAAA,EAAA,IAAA,EAAP,QAAO,CAAP;AAJG,GAAA;AAQP;;;;;AAGO,EAAA,OAAA,CAAA,UAAA,GAAP,UAAA,IAAA,EAAA,QAAA,EAAA;AAII,WAAO,KAAA,WAAA,CAAA,SAAA,EAAA,IAAA,EAAP,QAAO,CAAP;AAJG,GAAA;AAQP;;;;;AAGO,EAAA,OAAA,CAAA,QAAA,GAAP,UAAA,IAAA,EAAA,QAAA,EAAA;AAII,WAAO,KAAA,WAAA,CAAA,OAAA,EAAA,IAAA,EAAP,QAAO,CAAP;AAJG,GAAA;AAQP;;;;;AAGO,EAAA,OAAA,CAAA,KAAA,GAAP,UAAA,IAAA,EAAA,QAAA,EAAA;AAII,WAAO,KAAA,QAAA,CAAA,OAAA,EAAA,IAAA,EAAP,QAAO,CAAP;AAJG,GAAA;;AAMC,EAAA,OAAA,CAAA,QAAA,GAAR,UAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA;AAKI,QAAIC,OAAO,CAAX,IAAW,CAAX,EAAmB;AACf,WAAA,EAAA,CAAWC,IAAI,GAAJA,GAAAA,GAAQC,eAAe,CAAfA,IAAe,CAAfA,CAAAA,IAAAA,CAAnB,GAAmBA,CAAnB,EAAA,QAAA;AADJ,KAAA,MAEO,IAAIC,QAAQ,CAAZ,IAAY,CAAZ,EAAoB;AACvB,WAAA,EAAA,CAAWF,IAAI,GAAJA,GAAAA,GAAX,IAAA,EAAA,QAAA;AADG,KAAA,MAEA;AACH,WAAA,EAAA,CAAA,IAAA,EAAA,IAAA;AACH;;AACD,WAAA,IAAA;AAZI,GAAA;;AAcA,EAAA,OAAA,CAAA,WAAA,GAAR,UAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA;AAKI,QAAID,OAAO,CAAX,IAAW,CAAX,EAAmB;AACf,WAAA,GAAA,CAAYC,IAAI,GAAJA,GAAAA,GAAQC,eAAe,CAAfA,IAAe,CAAfA,CAAAA,IAAAA,CAApB,GAAoBA,CAApB,EAAA,QAAA;AADJ,KAAA,MAEO,IAAIC,QAAQ,CAAZ,IAAY,CAAZ,EAAoB;AACvB,WAAA,GAAA,CAAYF,IAAI,GAAJA,GAAAA,GAAZ,IAAA,EAAA,QAAA;AADG,KAAA,MAEA;AACH,WAAA,GAAA,CAAA,IAAA,EAAA,IAAA;AACH;;AACD,WAAA,IAAA;AAZI,GAAA;;AAcA,EAAA,OAAA,CAAA,YAAA,GAAR,UAAA,IAAA,EAAA,CAAA,EAAA;AACI,SAAA,OAAA,GAAehB,CAAC,CAAhB,OAAA;AACA,SAAA,QAAA,GAAgBA,CAAC,CAAjB,QAAA;AACA,SAAA,MAAA,GAAcA,CAAC,CAAf,MAAA;AACA,SAAA,OAAA,GAAeA,CAAC,CAAhB,OAAA;AAEA,QAAMH,GAAG,GAAGF,MAAM,CAACK,CAAC,CAApB,OAAkB,CAAlB;AACA,QAAMmB,QAAQ,GAAGtB,GAAG,KAAHA,MAAAA,IACVA,GAAG,KADOA,OAAAA,IAEVA,GAAG,KAFOA,MAAAA,IAGVA,GAAG,KAHV,KAAA;AAIA,QAAMuB,KAAK,GAAoC;AAC3CvB,MAAAA,GAAG,EADwC,GAAA;AAE3CsB,MAAAA,QAAQ,EAFmC,QAAA;AAG3CE,MAAAA,UAAU,EAHiC,CAAA;AAI3CzB,MAAAA,OAAO,EAAEI,CAAC,CAJiC,OAAA;AAK3CsB,MAAAA,OAAO,EAAEtB,CAAC,CALiC,OAAA;AAM3CuB,MAAAA,MAAM,EAAEvB,CAAC,CANkC,MAAA;AAO3CwB,MAAAA,QAAQ,EAAExB,CAAC,CAPgC,QAAA;AAQ3CyB,MAAAA,OAAO,EAAEzB,CAAC,CAACyB;AARgC,KAA/C;AAUA,SAAA,OAAA,CAAA,IAAA,EAAA,KAAA;AACA,SAAA,OAAA,CAAgBT,IAAI,GAAJA,GAAAA,GAAhB,GAAA,EAAA,KAAA;AAEA,QAAMU,KAAK,GAAG3B,QAAQ,CAAA,CAAA,EAAtB,GAAsB,CAAtB;AAEA2B,IAAAA,KAAK,CAALA,MAAAA,GAAAA,CAAAA,IAAoB,KAAA,OAAA,CAAgBV,IAAI,GAAJA,GAAAA,GAAQU,KAAK,CAALA,IAAAA,CAAxB,GAAwBA,CAAxB,EAApBA,KAAoB,CAApBA;AA1BI,GAAA;;AAsCZ,SAAA,aAAA;AArKA,C,CAAA,Y,CAAA","sourcesContent":["import EventEmitter, { EmitterParam, TargetParam } from \"@scena/event-emitter\";\nimport { names } from \"keycode\";\nimport { isString, isArray, addEvent, removeEvent } from \"@daybrush/utils\";\n\nconst codeData = {\n    \"+\": \"plus\",\n    \"left command\": \"meta\",\n    \"right command\": \"meta\",\n};\nconst keysSort = {\n    shift: 1,\n    ctrl: 2,\n    alt: 3,\n    meta: 4,\n};\n/**\n * @memberof KeyController\n */\nexport function getKey(keyCode: number): string {\n    let key = names[keyCode] || \"\";\n\n    for (const name in codeData) {\n        key = key.replace(name, codeData[name]);\n    }\n    return key.replace(/\\s/g, \"\");\n}\n\n/**\n * @memberof KeyController\n */\nexport function getCombi(e: KeyboardEvent, key: string = getKey(e.keyCode)): string[] {\n    const keys = getModifierCombi(e);\n    keys.indexOf(key) === -1 && keys.push(key);\n\n    return keys.filter(Boolean);\n}\n\n/**\n * @memberof KeyController\n */\nexport function getModifierCombi(e: KeyboardEvent): string[] {\n    const keys = [e.shiftKey && \"shift\", e.ctrlKey && \"ctrl\", e.altKey && \"alt\", e.metaKey && \"meta\"];\n\n    return keys.filter(Boolean);\n}\n\nfunction getArrangeCombi(keys: string[]) {\n    const arrangeKeys = keys.slice();\n    arrangeKeys.sort((prev, next) => {\n        const prevScore = keysSort[prev] || 5;\n        const nextScore = keysSort[next] || 5;\n\n        return prevScore - nextScore;\n    });\n\n    return arrangeKeys;\n}\n/**\n * @typedef\n * @memberof KeyController\n */\nexport interface KeyControllerEvent extends EmitterParam {\n    inputEvent: KeyboardEvent;\n    isToggle: boolean;\n    key: string;\n    keyCode: number;\n    ctrlKey: boolean;\n    altKey: boolean;\n    shiftKey: boolean;\n    metaKey: boolean;\n}\nlet globalKeyController!: KeyController;\n\n/**\n */\nclass KeyController extends EventEmitter<{\n    blur: {},\n    [key: string]: object,\n}> {\n    /**\n     */\n    public static get global() {\n        return globalKeyController || (globalKeyController = new KeyController());\n    }\n    public static setGlobal() {\n        return this.global;\n    }\n    /**\n     */\n    public ctrlKey = false;\n    /**\n     */\n    public altKey = false;\n    /**\n     *\n     */\n    public shiftKey = false;\n    /**\n     *\n     */\n    public metaKey = false;\n    /**\n     *\n     */\n    constructor(private container: Window | Document | HTMLElement = window) {\n        super();\n\n        addEvent(container, \"blur\", this.blur);\n        addEvent(container, \"keydown\", this.keydownEvent);\n        addEvent(container, \"keyup\", this.keyupEvent);\n    }\n    public clear = (): this => {\n        this.ctrlKey = false;\n        this.altKey = false;\n        this.shiftKey = false;\n        this.metaKey = false;\n        return this;\n    }\n    /**\n     *\n     */\n    public destroy() {\n        const container = this.container as any;\n\n        this.clear();\n        this.off();\n        removeEvent(container, \"blur\", this.blur);\n        removeEvent(container, \"keydown\", this.keydownEvent);\n        removeEvent(container, \"keyup\", this.keyupEvent);\n    }\n    public keydown(comb: string | string[], callback: (e: KeyControllerEvent) => void): this;\n    public keydown(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public keydown(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.addEvent(\"keydown\", comb, callback);\n    }\n    public offKeydown(comb: string | string[], callback?: (e: KeyControllerEvent) => void): this;\n    public offKeydown(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public offKeydown(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.removeEvent(\"keydown\", comb, callback);\n    }\n    public offKeyup(comb: string | string[], callback?: (e: KeyControllerEvent) => void): this;\n    public offKeyup(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public offKeyup(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.removeEvent(\"keyup\", comb, callback);\n    }\n    public keyup(comb: string | string[], callback: (e: KeyControllerEvent) => void): this;\n    public keyup(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public keyup(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.addEvent(\"keyup\", comb, callback);\n    }\n    private addEvent(\n        type: \"keydown\" | \"keyup\",\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        if (isArray(comb)) {\n            this.on(`${type}.${getArrangeCombi(comb).join(\".\")}`, callback);\n        } else if (isString(comb)) {\n            this.on(`${type}.${comb}`, callback);\n        } else {\n            this.on(type, comb);\n        }\n        return this;\n    }\n    private removeEvent(\n        type: \"keydown\" | \"keyup\",\n        comb: string | string[] | ((e: KeyControllerEvent) => void) | undefined,\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        if (isArray(comb)) {\n            this.off(`${type}.${getArrangeCombi(comb).join(\".\")}`, callback);\n        } else if (isString(comb)) {\n            this.off(`${type}.${comb}`, callback);\n        } else {\n            this.off(type, comb);\n        }\n        return this;\n    }\n    private triggerEvent(type: \"keydown\" | \"keyup\", e: KeyboardEvent) {\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n\n        const key = getKey(e.keyCode);\n        const isToggle = key === \"ctrl\"\n            || key === \"shift\"\n            || key === \"meta\"\n            || key === \"alt\";\n        const param: TargetParam<KeyControllerEvent> = {\n            key,\n            isToggle,\n            inputEvent: e,\n            keyCode: e.keyCode,\n            ctrlKey: e.ctrlKey,\n            altKey: e.altKey,\n            shiftKey: e.shiftKey,\n            metaKey: e.metaKey,\n        };\n        this.trigger(type, param);\n        this.trigger(`${type}.${key}`, param);\n\n        const combi = getCombi(e, key);\n\n        combi.length > 1 && this.trigger(`${type}.${combi.join(\".\")}`, param);\n    }\n    private keydownEvent = (e: KeyboardEvent) => {\n        this.triggerEvent(\"keydown\", e);\n    }\n    private keyupEvent = (e: KeyboardEvent) => {\n        this.triggerEvent(\"keyup\", e);\n    }\n    private blur = () => {\n        this.clear();\n        this.trigger(\"blur\");\n    }\n}\n\nexport default KeyController;\n"]},"metadata":{},"sourceType":"module"}